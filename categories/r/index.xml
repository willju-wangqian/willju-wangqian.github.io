<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>R on Wangqian Ju&#39;s website</title>
    <link>/categories/r/</link>
    <description>Recent content in R on Wangqian Ju&#39;s website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="/categories/r/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Add a post with blogdown</title>
      <link>/2023/03/27/add-a-post-with-blogdown/</link>
      <pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/2023/03/27/add-a-post-with-blogdown/</guid>
      <description> Use the Addins to add a new post
 Edit the post
 Knit
 blogdown::serve_site()
 blogdown::build_site()
 Check the Github repo on which the website is built
  </description>
    </item>
    
    <item>
      <title>Submit an R package to CRAN </title>
      <link>/2023/03/27/submit-an-r-package-to-cran/</link>
      <pubDate>Mon, 27 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>/2023/03/27/submit-an-r-package-to-cran/</guid>
      <description>TOBE FINISHED</description>
    </item>
    
    <item>
      <title>R project first then git</title>
      <link>/2022/04/19/r-project-first-then-git/</link>
      <pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>/2022/04/19/r-project-first-then-git/</guid>
      <description>The primary goal of this blog is to remind me how to link my local R project to a newly created git repo. The content are mainly from the chapter 17 of the book Happy Git and GitHub for the useR by Jennifer Bryan.
Step 1 Get a local R project and its folder ready.
 Step 2 Create github repo
 Step 3 Connect the local R project folder to the remote github repo</description>
    </item>
    
    <item>
      <title>Include C code in R</title>
      <link>/2022/03/31/r-source-c/</link>
      <pubDate>Thu, 31 Mar 2022 22:03:48 -0500</pubDate>
      
      <guid>/2022/03/31/r-source-c/</guid>
      <description>Intro This is a short summary of how to add C source code into an R package. I wrote this a year ago as a course material summary (STAT 580) and believed that I would remember all the basic details forever. Obviously, I was wrong. So I’m not 100 percent sure about the following contents and can only hope that this is still helpful to, I don’t know, at least myself in the future :) Enjoy!</description>
    </item>
    
    <item>
      <title>Introduction to cmpsR package</title>
      <link>/2022/03/31/cmpsr-intro/</link>
      <pubDate>Thu, 31 Mar 2022 21:53:59 -0500</pubDate>
      
      <guid>/2022/03/31/cmpsr-intro/</guid>
      <description>cmpsR  The cmpsR package is an implementation of the Congruent Matching Profile Segments (CMPS) method (Chen et al. 2019). In general, it can be used for objective comparison of striated tool marks, but in our examples, we mainly use it for bullet signatures comparison. The CMPS score is expected to be large if two signatures are similar. So it can also be considered as a feature that measures the similarity of two bullet signatures.</description>
    </item>
    
  </channel>
</rss>
